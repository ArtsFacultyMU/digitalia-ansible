---
- name: Copy .vimrc to user's home directory
  ansible.builtin.copy:
    src: .vimrc 
    dest: "/home/{{ username }}/.vimrc"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'
  become: yes
  become_user: islandora
  tags: configs

- name: Set alias to switch to drupal directory
  ansible.builtin.lineinfile:
    path: "/home/{{ username }}/.bashrc"
    line: "alias cddrupal='cd {{ drupal_dir }}'"
    create: yes
  become: yes
  become_user: islandora
  tags: aliases

- name: Remove old alias to switch to drupal islandora_muni theme directory
  ansible.builtin.lineinfile:
    path: "/home/{{ username }}/.bashrc"
    line: "alias cdtheme='cd {{ drupal_dir }}/web/themes/islandora_muni'"
    create: yes
    state: absent
  become: yes
  become_user: islandora
  tags: aliases

- name: Set alias to switch to drupal islandora_muni theme directory
  ansible.builtin.lineinfile:
    path: "/home/{{ username }}/.bashrc"
    line: "alias cdtheme='cd {{ drupal_dir }}/web/themes/custom/islandora_muni'"
    create: yes
  become: yes
  become_user: islandora
  tags: aliases

- name: Set alias to switch to drupal modules directory
  ansible.builtin.lineinfile:
    path: "/home/{{ username }}/.bashrc"
    line: "alias cdmodules='cd {{ drupal_dir }}/web/modules/custom'"
    create: yes
  become: yes
  become_user: islandora
  tags: aliases

- name: Set PATH to handle proper drush binary
  ansible.builtin.lineinfile:
    path: "/home/{{ username }}/.bashrc"
    line: "export PATH={{ drush_dir }}:$PATH"
    create: yes
  become: yes
  become_user: islandora
  tags: configs

- name: Check for /etc/tripwire
  ansible.builtin.stat:
    path: /etc/tripwire
  register: tripwire_dir_res
  tags: 
    - tripwire
    - configs

- name: Copy islandora twpol.txt 
  ansible.builtin.copy:
    src: twpol.txt
    dest: /etc/tripwire/twpol.txt
  when: tripwire_dir_res.stat.exists
  tags: 
    - tripwire
    - configs

- name: Check for /etc/systemd/system/tomcat9.service.d/override.conf
  ansible.builtin.stat:
    path: /etc/systemd/system/tomcat9.service.d/override.conf
  register: tomcat_override_file_res
  tags: 
    - tomcat
    - permissions
    - configs

- name: Allow /data/fcrepo path to write for tomcat
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/tomcat9.service.d/override.conf
    line: "ReadWritePaths=/data/fcrepo"
  when: tomcat_override_file_res.stat.exists
  notify: Restart Tomcat
  tags: 
    - tomcat
    - permissions

- name: Allow /data/fcrepo-data path to write for tomcat
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/tomcat9.service.d/override.conf
    line: "ReadWritePaths=/data/fcrepo-data"
  when: tomcat_override_file_res.stat.exists
  notify: Restart Tomcat
  tags: 
    - tomcat 
    - permissions

- name: Create dir /data/fcrepo
  ansible.builtin.file:
    path: /data/fcrepo
    state: directory
    owner: tomcat
    group: tomcat
    mode: '0755'
    recurse: no
  tags: permissions

- name: Create dir /data/fcrepo-data
  ansible.builtin.file:
    path: /data/fcrepo-data
    state: directory
    owner: tomcat
    group: tomcat
    mode: '0755'
    recurse: no
  tags: permissions

- name: Create dir /var/www/html/drupal/config/export/configs
  ansible.builtin.file:
    path: /var/www/html/drupal/config/export/configs
    state: directory
    owner: islandora
    group: islandora
    mode: '0755'
    recurse: yes
  tags: permissions

- name: Set up islandora:islandora for drupal dir
  ansible.builtin.file:
    path: /var/www/html/
    state: directory
    recurse: yes
    owner: islandora
    group: islandora
    mode: "o-w"
  tags: permissions

- name: Set up www-data group for files dir
  ansible.builtin.file:
    path: /var/www/html/drupal/web/sites/default/files
    state: directory
    recurse: yes
    group: www-data
    mode: "g+w"
  tags: permissions

- name: Copy .htaccess in Drupal's files dir
  ansible.builtin.copy:
    src: .htaccess
    dest: "{{ drupal_dir }}/web/sites/default/files/.htaccess"
    owner: islandora
    group: www-data
    mode: '0444'
  tags: permissions

- name: Set up permissions for Drupal root
  ansible.builtin.file:
    path: "{{ drupal_dir }}"
    owner: islandora
    group: islandora
    mode: "0755"
  tags: permissions

- name: Set up permissions composer.json in Drupal root
  ansible.builtin.file:
    path: "{{ drupal_dir }}/composer.json"
    owner: islandora
    group: islandora
    mode: "0644"
  tags: permissions

- name: Check for Houdini/var/log/dev.log
  ansible.builtin.stat:
    path: /var/www/html/Crayfish/Houdini/var/log/dev.log
  register: houdini_log_res
  tags: 
    - permissions
    - logs-perms

- name: Set up group www-data and write permissions for various log files
  ansible.builtin.file:
    path: /var/www/html/Crayfish/Houdini/var/log/dev.log
    group: "www-data"
    mode: "g+w"
  when: houdini_log_res.stat.exists
  tags: 
    - permissions
    - logs-perms

- name: Create assets dir
  ansible.builtin.file:
    path: "{{ drupal_dir }}/assets/"
    owner: islandora
    group: islandora
    mode: '0755'
    state: "directory"
  tags: robots

- name: Copy robots.txt to Drupal root dir
  ansible.builtin.template:
    src: robots-additions.txt.j2
    dest: "{{ drupal_dir }}/assets/robots-additions.txt"
    owner: islandora
    group: islandora
    mode: '0644'
  tags: robots

- name: Install jq (neccessary for the next task)
  ansible.builtin.apt:
    package: jq
    state: present
  tags: robots

- name: Ensure file-mapping exists in drupal-scaffold
  ansible.builtin.shell: |
    cp {{ drupal_dir }}/composer.json {{ drupal_dir }}/composer.json-{{ ansible_date_time.iso8601 }}
    cat {{ drupal_dir }}/composer.json | jq '.extra["drupal-scaffold"] += {"file-mapping": {"[web-root]/robots.txt": {"append": "assets/robots-additions.txt"}}}' > {{ drupal_dir }}/composer.json.tmp
    mv {{ drupal_dir }}/composer.json.tmp {{ drupal_dir }}/composer.json
  args:
    executable: /bin/bash
  become: true
  become_user: islandora
  tags: robots

- name: Set up robots.txt ownership and rights
  ansible.builtin.file:
    path: "{{ drupal_dir }}/web/robots.txt"
    owner: islandora
    group: islandora
    mode: '0644'
  tags: robots

- name: Create xmlsitemap dir
  ansible.builtin.file:
    path: "{{ drupal_dir }}/web/sites/default/files/xmlsitemap"
    owner: islandora
    group: www-data
    mode: '0775'
    state: "directory"
  tags: sitemap

- name: Add MySQL binary logging off config file 
  ansible.builtin.copy: 
    src: disable_binary_log.cnf
    dest: /etc/mysql/conf.d/disable_binary_log.cnf
    owner: root
    group: root
    mode: '0644'
  tags: mysql

- name: Load MySQL binary logging off config file 
  ansible.builtin.lineinfile:
    path: /etc/mysql/my.cnf
    insertafter: "EOF"
    line: '!include /etc/mysql/conf.d/disable_binary_log.cnf'
  tags: mysql

